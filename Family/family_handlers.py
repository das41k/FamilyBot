from telebot import types
from Family.family_service import family_service
from BOT.keyboards import create_family_keyboard, create_main_keyboard, create_confirm_keyboard


def register_family_handlers(bot):
    def show_family_menu(chat_id, username):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é —Å–µ–º—å–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π"""
        bot.send_message(
            chat_id,
            "–ú–µ–Ω—é —Å–µ–º—å–∏",
            reply_markup=create_family_keyboard(username)
        )

    @bot.message_handler(func=lambda msg: msg.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
    def handle_back(message):
        username = message.from_user.username
        # –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤–º–µ—Å—Ç–æ –º–µ–Ω—é —Å–µ–º—å–∏
        bot.send_message(
            message.chat.id,
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            reply_markup=create_main_keyboard()
        )

    @bot.message_handler(func=lambda msg: msg.text == "‚ûï –°–æ–∑–¥–∞—Ç—å")
    def handle_create_family(message):
        chat_id = message.chat.id
        username = message.from_user.username

        if family_service.get_family_id(username):
            show_family_menu(chat_id, username)
            bot.send_message(chat_id, "–í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–µ–º—å–µ.")
            return

        back_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back_keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥")

        msg = bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Å–µ–º—å–∏:",
                               reply_markup=back_keyboard)
        bot.register_next_step_handler(msg, process_family_name)

    def process_family_name(message):
        chat_id = message.chat.id
        username = message.from_user.username

        if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
            # –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            bot.send_message(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=create_main_keyboard())
            return

        family_name = message.text.strip()

        if not family_name:
            back_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back_keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥")

            msg = bot.send_message(chat_id, "–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:",
                                   reply_markup=back_keyboard)
            bot.register_next_step_handler(msg, process_family_name)
            return

        back_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        back_keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥")

        msg = bot.send_message(chat_id,
                               "–ü—Ä–∏–¥—É–º–∞–π—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–µ–º—å–µ:",
                               reply_markup=back_keyboard)
        bot.register_next_step_handler(msg, lambda m: process_join_code(m, family_name, username))

    def process_join_code(message, family_name, username):
        chat_id = message.chat.id

        if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
            # –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            bot.send_message(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=create_main_keyboard())
            return

        join_code = message.text.strip()

        if len(join_code) != 6:
            back_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back_keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥")

            msg = bot.send_message(chat_id, "–ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–æ–≤–Ω–æ 6 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                                   reply_markup=back_keyboard)
            bot.register_next_step_handler(msg, lambda m: process_join_code(m, family_name, username))
            return

        try:
            if family_service.create_family(family_name, join_code, username):
                show_family_menu(chat_id, username)
                bot.send_message(chat_id, f"‚úÖ –°–µ–º—å—è '{family_name}' —Å–æ–∑–¥–∞–Ω–∞!\n–ö–æ–¥: {join_code}")
            else:
                show_family_menu(chat_id, username)
                bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ–º—å—é.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            show_family_menu(chat_id, username)
            bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")

    @bot.message_handler(func=lambda msg: msg.text == "üö™ –í—ã–π—Ç–∏")
    def handle_leave_family(message):
        chat_id = message.chat.id
        username = message.from_user.username

        if not family_service.get_family_id(username):
            show_family_menu(chat_id, username)
            bot.send_message(chat_id, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–µ–º—å–µ.")
            return

        confirm_keyboard = create_confirm_keyboard()
        confirm_keyboard.add("‚Ü©Ô∏è –ù–∞–∑–∞–¥")

        bot.send_message(chat_id, "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —Å–µ–º—å–∏?",
                         reply_markup=confirm_keyboard)
        bot.register_next_step_handler(message, process_leave_confirmation)

    def process_leave_confirmation(message):
        chat_id = message.chat.id
        username = message.from_user.username

        if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
            # –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            bot.send_message(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=create_main_keyboard())
            return

        if message.text == "–î–∞":
            if family_service.leave_family(username):
                bot.send_message(chat_id, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—à–ª–∏ –∏–∑ —Å–µ–º—å–∏.",
                             reply_markup=create_main_keyboard())
            else:
                bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ —Å–µ–º—å–∏.",
                             reply_markup=create_main_keyboard())
        else:
            bot.send_message(chat_id, "–û—Ç–º–µ–Ω–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–µ–º—å–∏.",
                             reply_markup=create_main_keyboard())

    @bot.message_handler(func=lambda msg: msg.text == "üë™ –ú–æ—è —Å–µ–º—å—è")
    def handle_family_info(message):
        chat_id = message.chat.id
        username = message.from_user.username

        family_id = family_service.get_family_id(username)
        if not family_id:
            show_family_menu(chat_id, username)
            bot.send_message(chat_id, "–í—ã –ø–æ–∫–∞ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–µ–º—å–µ.")
            return

        family_info = family_service.get_family_info(family_id)
        if family_info:
            members = "\n".join([f"‚Ä¢ @{user}" for user in family_service.get_family_members(family_id)])
            bot.send_message(chat_id,
                             f"üë™ –°–µ–º—å—è: {family_info['family_name']}\n"
                             f"üë§ –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {family_info['member_count']}\n"
                             f"üî∏ –£—á–∞—Å—Ç–Ω–∏–∫–∏:\n{members}")
        else:
            bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–º—å–µ.")

    @bot.message_handler(func=lambda msg: msg.text == "üîó –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è")
    def handle_join_family(message):
        chat_id = message.chat.id
        username = message.from_user.username

        if family_service.get_family_id(username):
            show_family_menu(chat_id, username)
            bot.send_message(chat_id, "‚ùå –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å–µ–º—å–µ.")
            return

        cancel_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        cancel_keyboard.add("‚ùå –û—Ç–º–µ–Ω–∞", "‚Ü©Ô∏è –ù–∞–∑–∞–¥")

        msg = bot.send_message(chat_id, "üîë –í–≤–µ–¥–∏—Ç–µ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:",
                               reply_markup=cancel_keyboard)
        bot.register_next_step_handler(msg, process_join_family_code)

    def process_join_family_code(message):
        chat_id = message.chat.id
        username = message.from_user.username

        if message.text == '‚Ü©Ô∏è –ù–∞–∑–∞–¥':
            # –ò–∑–º–µ–Ω–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            bot.send_message(chat_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=create_main_keyboard())
            return
        elif message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
            bot.send_message(chat_id, "–û—Ç–º–µ–Ω–µ–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Å–µ–º—å–µ.",
                             reply_markup=create_main_keyboard())
            return

        join_code = message.text.strip()
        if len(join_code) != 6:
            cancel_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            cancel_keyboard.add("‚ùå –û—Ç–º–µ–Ω–∞", "‚Ü©Ô∏è –ù–∞–∑–∞–¥")

            msg = bot.send_message(chat_id, "‚ùå –ö–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–æ–≤–Ω–æ 6 —Å–∏–º–≤–æ–ª–æ–≤:",
                                   reply_markup=cancel_keyboard)
            bot.register_next_step_handler(msg, process_join_family_code)
            return

        try:
            if family_service.join_family(join_code, username):
                bot.send_message(chat_id, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Å–µ–º—å–µ!",
                             reply_markup=create_main_keyboard())
            else:
                cancel_keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
                cancel_keyboard.add("‚ùå –û—Ç–º–µ–Ω–∞", "‚Ü©Ô∏è –ù–∞–∑–∞–¥")

                msg = bot.send_message(chat_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:",
                                       reply_markup=cancel_keyboard)
                bot.register_next_step_handler(msg, process_join_family_code)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞: {e}")
            bot.send_message(chat_id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.",
                             reply_markup=create_main_keyboard())