import telebot
from telebot import types
import datetime
import DBconnection
import ServiceAndrey
from ServiceAndrey import Part_Andrey
from Calculation.calculation_service import FinanceCalculator
from BOT.keyboards import *
user_data = {}

def create_calculator_keyboard():
    '''
    "–í–∫–ª–∞–¥",
    "–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è",
    "–ë—é–¥–∂–µ—Ç",
    '''
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = [
        "–ö—Ä–µ–¥–∏—Ç",
        "‚Ü©Ô∏è –ù–∞–∑–∞–¥"  # –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    ]
    keyboard.add(*buttons)
    return keyboard

def register_calculation_handlers(bot):

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–º–µ–Ω—é –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    @bot.message_handler(func=lambda m: m.text == "–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ñ–∏–Ω–∞–Ω—Å–æ–≤")
    def show_calculator_menu(message):
        bot.send_message(
            message.chat.id,
            "üìä –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å—á–µ—Ç–∞:",
            reply_markup=create_calculator_keyboard()
        )

    # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    @bot.message_handler(func=lambda m: m.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
    def back_to_main_menu(message):
        bot.send_message(
            message.chat.id,
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=create_main_keyboard()
        )

    def create_retry_keyboard():
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã"""
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add("üîô –û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥")
        return keyboard

    def handle_cancel(message) -> bool:
        """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–º–µ–Ω—ã"""
        if message.text.lower() in ("üîô –æ—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥"):
            bot.send_message(
                message.chat.id,
                "üö´ –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
                reply_markup=create_calculator_keyboard()
            )
            return True
        return False

    @bot.message_handler(func=lambda m: m.text == "–ö—Ä–µ–¥–∏—Ç")
    def ask_loan_type(message):
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add("–ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π", "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π", "‚Ü©Ô∏è –ù–∞–∑–∞–¥")
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞:",
            reply_markup=keyboard
        )

    @bot.message_handler(func=lambda m: m.text in ["–ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π", "–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π"])
    def ask_loan_amount(message):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å, –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
        if message.chat.id not in user_data:
            user_data[message.chat.id] = {}

        user_data[message.chat.id]["loan_type"] = "annuity" if message.text == "–ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π" else "diff"
        msg = bot.send_message(
            message.chat.id,
            "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–∞ (—Ä—É–±):",
            reply_markup=create_retry_keyboard()
        )
        bot.register_next_step_handler(msg, process_loan_amount)

    def process_loan_amount(message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—É–º–º—ã –∫—Ä–µ–¥–∏—Ç–∞"""
        if handle_cancel(message):
            return

        try:
            amount = float(message.text)
            if amount <= 0:
                raise ValueError

            user_data[message.chat.id]["amount"] = amount
            msg = bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥–æ–≤—É—é –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 12.5):",
                reply_markup=create_retry_keyboard()
            )
            bot.register_next_step_handler(msg, process_loan_rate)
        except ValueError:
            msg = bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞! –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 500000):",
                reply_markup=create_retry_keyboard()
            )
            bot.register_next_step_handler(msg, process_loan_amount)

    def process_loan_rate(message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–∏"""
        if handle_cancel(message):
            return

        try:
            rate = float(message.text)
            if not (0.1 <= rate <= 100):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—É–º–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω —Å—Ç–∞–≤–æ–∫
                raise ValueError

            user_data[message.chat.id]["rate"] = rate
            msg = bot.send_message(
                message.chat.id,
                "–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –∫—Ä–µ–¥–∏—Ç–∞ –≤ –º–µ—Å—è—Ü–∞—Ö (–æ—Ç 1 –¥–æ 360):",
                reply_markup=create_retry_keyboard()
            )
            bot.register_next_step_handler(msg, process_loan_term)
        except ValueError:
            msg = bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0.1 –¥–æ 100 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 15.9):",
                reply_markup=create_retry_keyboard()
            )
            bot.register_next_step_handler(msg, process_loan_rate)

    def process_loan_term(message):
        if handle_cancel(message):
            return

        try:
            term = int(message.text)
            if not (1 <= term <= 360):
                raise ValueError

            data = user_data[message.chat.id]
            # –Ø–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è loan_type
            if "loan_type" not in data:
                data["loan_type"] = "annuity"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            loan_type = data.get("loan_type", "annuity")
            print(f"DEBUG: Input loan_type={data.get('loan_type')}")
            result = FinanceCalculator.calculate_loan(
                data["amount"],
                data["rate"],
                term,
                loan_type
            )

            # –î–õ–Ø –î–ï–ë–ê–ì–ê - –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥
            print(f"DEBUG: loan_type={loan_type}, result_type={result['payment_type']}")

            if result["payment_type"] == "annuity":
                # –í—ã–≤–æ–¥ –¥–ª—è –∞–Ω–Ω—É–∏—Ç–µ—Ç–∞
                message_text = (
                    "üè¶ <b>–ê–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</b>\n\n"
                    f"‚Ä¢ –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: <b>{data['amount']:,.2f} —Ä—É–±</b>\n"
                    f"‚Ä¢ –°—Ç–∞–≤–∫–∞: <b>{data['rate']}%</b>\n"
                    f"‚Ä¢ –°—Ä–æ–∫: <b>{term} –º–µ—Å</b>\n\n"
                    f"üìÖ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –ø–ª–∞—Ç—ë–∂: <b>{result['monthly_payment']:,.2f} —Ä—É–±</b>\n"
                    f"üí∏ –ü–µ—Ä–µ–ø–ª–∞—Ç–∞: <b>{result['overpayment']:,.2f} —Ä—É–±</b>\n"
                    f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: <b>{result['total_payment']:,.2f} —Ä—É–±</b>"
                )
                # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
                bot.send_message(
                    message.chat.id,
                    message_text,
                    parse_mode="HTML",
                    reply_markup=create_calculator_keyboard()
                )
            else:
                # –í—ã–≤–æ–¥ –¥–ª—è –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
                header = (
                    "üè¶ <b>–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</b>\n\n"
                    f"‚Ä¢ –°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞: <b>{data['amount']:,.2f} —Ä—É–±</b>\n"
                    f"‚Ä¢ –°—Ç–∞–≤–∫–∞: <b>{data['rate']}%</b>\n"
                    f"‚Ä¢ –°—Ä–æ–∫: <b>{term} –º–µ—Å</b>\n\n"
                    f"üìà –ü–µ—Ä–≤—ã–π –ø–ª–∞—Ç—ë–∂: <b>{result['first_payment']:,.2f} —Ä—É–±</b>\n"
                    f"üìâ –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–ª–∞—Ç—ë–∂: <b>{result['last_payment']:,.2f} —Ä—É–±</b>\n"
                    f"üí∏ –ü–µ—Ä–µ–ø–ª–∞—Ç–∞: <b>{result['overpayment']:,.2f} —Ä—É–±</b>\n\n"
                    "<b>–ì—Ä–∞—Ñ–∏–∫ –ø–ª–∞—Ç–µ–∂–µ–π:</b>\n"
                )

                max_rows_per_message = 12  # –ú–µ—Å—è—Ü–µ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                schedule = result["schedule"]

                for i in range(0, len(schedule), max_rows_per_message):
                    chunk = schedule[i:i + max_rows_per_message]

                    # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∞—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã
                    table = "<pre>"  # –ù–∞—á–∞–ª–æ —Ç–µ–≥–∞ <pre>
                    table += "‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n"
                    table += "‚îÇ  –ú–µ—Å. ‚îÇ   –ü–ª–∞—Ç—ë–∂    ‚îÇ  –û—Å—Ç–∞—Ç–æ–∫  ‚îÇ\n"
                    table += "‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§\n"

                    for p in chunk:
                        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–∞ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –≤–º–µ—Å—Ç–æ –∑–∞–ø—è—Ç—ã—Ö
                        payment_str = f"{p['payment']:,.2f}".replace(",", " ")
                        remaining_str = f"{p['remaining']:,.2f}".replace(",", " ")

                        table += (
                            f"‚îÇ {p['month']:^5} ‚îÇ "
                            f"{payment_str:>11} ‚îÇ "
                            f"{remaining_str:>9} ‚îÇ\n"
                        )

                    table += "‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n"
                    table += "</pre>"  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–≥

                    # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                    message_text = header if i == 0 else ""  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                    message_text += table

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è (–º–∞–∫—Å. 4096 —Å–∏–º–≤–æ–ª–æ–≤)
                    if len(message_text) > 4096:
                        raise ValueError("–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ")

                    # –û—Ç–ø—Ä–∞–≤–∫–∞ —á–∞—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—ã
                    bot.send_message(
                        message.chat.id,
                        message_text,
                        parse_mode="HTML",
                        reply_markup=create_calculator_keyboard() if (i + max_rows_per_message >= len(schedule)) else None
                    )

            bot.clear_step_handler(message)

        except ValueError:
            msg = bot.send_message(
                message.chat.id,
                "‚ö†Ô∏è –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Å—Ä–æ–∫! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 360 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 36):",
                reply_markup=create_retry_keyboard()
            )
            bot.register_next_step_handler(msg, process_loan_term)
    @bot.message_handler(func=lambda m: True)
    def fallback_handler(message):
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.",
            reply_markup=create_main_keyboard()
        )